/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'steve' at '10/18/16 10:07 AM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenCentral();
}

def version_spring_boot="1.3.7.RELEASE"

//HACK: For the Gradle Application Task
//BUG: The actual mainclass that should be used is org.springframework.boot.loader.PropertiesLauncher
//or org.springframework.boot.loader.JarLauncher, depending on Application requirements.
//However, this is only available to the build AFTER the Spring Boot package tasks are run
//and those tasks ignore this value and use their own anyways.
mainClassName= "org.jasypt.demo.DemoMain"


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile("org.springframework.boot:spring-boot-starter-web:${version_spring_boot}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${version_spring_boot}")
    compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:1.8")
    //For additional issues with the Factory overriding the definition of jasyptStringEncryptor, 
    //just use the following. Note that the issue with the overriden jasyptStringEncryptor may be
    //exposed once the XSD Definition issue is resolved.
    //compile("com.github.ulisesbocchio:jasypt-spring-boot:1.8")
    
   

    testCompile 'junit:junit:4.12'
}
